// –§–∞–π–ª: SmartNotificationViewController.swift
import UIKit
import UserNotifications

class SmartNotificationViewController: UIViewController {
    
    // MARK: - UI Elements
    
    private let notificationSwitch: UISwitch = {
        let toggle = UISwitch()
        toggle.onTintColor = AppColors.accent
        toggle.addTarget(self, action: #selector(switchValueChanged(_:)), for: .valueChanged)
        return toggle
    }()
    
    // –ü–∏–∫–µ—Ä –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞–º –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω, —Ç–∞–∫ –∫–∞–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø—Ä–∏–≤—è–∑–∞–Ω—ã –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
    // private let timePicker: UIDatePicker = { ... }()
    
    private let descriptionLabel: UILabel = {
        let label = UILabel()
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç, —á—Ç–æ–±—ã –æ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞–ª –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–µ
        label.text = "–†–∞–∑—Ä–µ—à–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∑–∞ 10 –º–∏–Ω—É—Ç –¥–æ –∫–∞–∂–¥–æ–π –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏."
        label.font = .systemFont(ofSize: 15)
        label.textColor = AppColors.textSecondary
        label.numberOfLines = 0
        label.textAlignment = .center
        return label
    }()
    
    // MARK: - Lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = AppColors.groupedBackground
        title = "Smart Notification"
        
        setupLayout()
        loadNotificationSettings()
    }
    
    // MARK: - Setup
    
    private func setupLayout() {
        // –£–±–∏—Ä–∞–µ–º timePicker –∏–∑ —Å—Ç–µ–∫–∞
        let mainStack = UIStackView(arrangedSubviews: [notificationSwitch, descriptionLabel])
        mainStack.axis = .vertical
        mainStack.spacing = 20
        mainStack.alignment = .center
        mainStack.translatesAutoresizingMaskIntoConstraints = false
        
        view.addSubview(mainStack)
        
        NSLayoutConstraint.activate([
            mainStack.centerXAnchor.constraint(equalTo: view.centerXAnchor),
            mainStack.centerYAnchor.constraint(equalTo: view.centerYAnchor),
            mainStack.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 40),
            mainStack.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -40)
        ])
    }
    
    private func loadNotificationSettings() {
        let defaults = UserDefaults.standard
        let areNotificationsEnabled = defaults.bool(forKey: "notificationsEnabled")
        notificationSwitch.isOn = areNotificationsEnabled
    }
    
    // MARK: - Actions
    
    @objc private func switchValueChanged(_ sender: UISwitch) {
        UserDefaults.standard.set(sender.isOn, forKey: "notificationsEnabled")
        
        if sender.isOn {
            // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∫–ª—é—á–∞–µ—Ç, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
            NotificationScheduler.shared.requestAuthorization()
        } else {
            // –ï—Å–ª–∏ –≤—ã–∫–ª—é—á–∞–µ—Ç, –º–æ–∂–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –í–°–ï –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            UNUserNotificationCenter.current().removeAllPendingNotificationRequests()
            print("üóëÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª—é—á–∏–ª –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è. –í—Å–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã.")
        }
    }
}
