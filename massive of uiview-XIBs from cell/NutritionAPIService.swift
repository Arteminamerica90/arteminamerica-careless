// –§–∞–π–ª: NutritionAPIService.swift (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –ë–ï–ó –í–´–ó–û–í–ê PAYWALL)
import Foundation
import UIKit

// –ü—Ä–æ—Ç–æ–∫–æ–ª –¥–ª—è —É–Ω–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–∑–æ–≤–∞ –ø–ª–∞—Ç–Ω—ã—Ö –∏ —Å–ª–æ–∂–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤.
protocol BarcodeFetchingService {
    var serviceName: String { get }
    func fetchProduct(by searchTerm: String) async throws -> Product?
}

class NutritionAPIService {
    
    static let shared = NutritionAPIService()
    private init() {}

    /// –ì–ª–∞–≤–Ω–∞—è "–∫–∞—Å–∫–∞–¥–Ω–∞—è" —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–¥—É–∫—Ç–µ.
    /// - Parameter searchTerm: –®—Ç—Ä–∏—Ö–∫–æ–¥ –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞.
    /// - Returns: –ù–∞–π–¥–µ–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç (`Product`) –∏–ª–∏ `nil`.
    func fetchNutrition(for searchTerm: String) async throws -> Product? {
        let isBarcode = Double(searchTerm) != nil && searchTerm.count > 5

        // --- –ö–ê–°–ö–ê–î–ù–´–ô –ü–û–ò–°–ö ---

        // –£—Ä–æ–≤–µ–Ω—å 1: Open Food Facts
        print("üîç [–£—Ä–æ–≤–µ–Ω—å 1] –ü–æ–∏—Å–∫ –≤ Open Food Facts...")
        if let product = try await OpenFoodFactsService.shared.fetchProduct(by: searchTerm) {
            return product
        }

        // –£—Ä–æ–≤–µ–Ω—å 2: USDA FoodData Central
        print("üîç [–£—Ä–æ–≤–µ–Ω—å 2] –ü–æ–∏—Å–∫ –≤ USDA FoodData Central...")
        if let product = try await USDA_Service.shared.fetchProduct(by: searchTerm) {
            return product
        }

        // --- –ì–õ–ê–í–ù–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: –í–´–ó–û–í –ü–õ–ê–¢–ù–´–• –°–ï–†–í–ò–°–û–í –ë–ï–ó PAYWALL ---
        // –£—Ä–æ–≤–µ–Ω—å 3: FatSecret (–ü–ª–∞—Ç–Ω–æ)
        if let product = try await callPremiumService(FatSecretService.shared, for: searchTerm) {
            return product
        }

        // –£—Ä–æ–≤–µ–Ω—å 4: Edamam (–ü–ª–∞—Ç–Ω–æ)
        if let product = try await callPremiumService(Edamam_Service.shared, for: searchTerm) {
            return product
        }
        
        // –£—Ä–æ–≤–Ω–∏ 5-14: –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –±–∞–∑—ã (–∑–∞–≥–ª—É—à–∫–∏)
        print("üîç [–£—Ä–æ–≤–µ–Ω—å 6] –ü–æ–∏—Å–∫ –≤ –†–æ—Å–∫–∞—á–µ—Å—Ç–≤–æ (–∑–∞–≥–ª—É—à–∫–∞)...")
        if let product = try await Roskachestvo_Service.shared.fetchProduct(by: searchTerm) {
            return product
        }

        // –£—Ä–æ–≤–µ–Ω—å 15: Go-UPC
        if isBarcode {
            print("üîç [–£—Ä–æ–≤–µ–Ω—å 15] –ü–æ–∏—Å–∫ –Ω–∞–∑–≤–∞–Ω–∏—è –≤ Go-UPC...")
            if let product = try await GoUPC_Service.shared.fetchProduct(by: searchTerm) {
                return product
            }
        }
        
        // –£—Ä–æ–≤–µ–Ω—å 16: Web Search
        if isBarcode {
            print("üîç [–£—Ä–æ–≤–µ–Ω—å 16] –ü–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ...")
            if let productName = await WebSearchService.shared.fetchProductName(by: searchTerm) {
                // <-- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–î–ï–°–¨
                return Product(productName: productName, nutriments: nil, servingSize: nil)
            }
        }
        
        print("‚ùå –ü—Ä–æ–¥—É–∫—Ç '\(searchTerm)' –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –≤ –æ–¥–Ω–æ–π –∏–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö.")
        return nil
    }

    /// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–∑–æ–≤–∞ –ø–ª–∞—Ç–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤.
    /// –¢–µ–ø–µ—Ä—å –æ–Ω–∞ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –∏ –ª–∏–±–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–ø—Ä–æ—Å, –ª–∏–±–æ –Ω–µ—Ç.
    private func callPremiumService<T: BarcodeFetchingService>(_ service: T, for searchTerm: String) async throws -> Product? {
        let isPremium = UserDefaults.standard.bool(forKey: "isPremiumUser")
        
        if isPremium {
            print("üîç [–£—Ä–æ–≤–µ–Ω—å P] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Premium. –ü–æ–∏—Å–∫ –≤ \(service.serviceName)...")
            return try await service.fetchProduct(by: searchTerm)
        } else {
            print("‚ÑπÔ∏è [–£—Ä–æ–≤–µ–Ω—å P] –ü—Ä–æ–ø—É—Å–∫ –ø–ª–∞—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ \(service.serviceName). –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞.")
            // –ü—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º nil, —á—Ç–æ–±—ã –∫–∞—Å–∫–∞–¥–Ω—ã–π –ø–æ–∏—Å–∫ –ø—Ä–æ–¥–æ–ª–∂–∏–ª—Å—è
            return nil
        }
    }
}
