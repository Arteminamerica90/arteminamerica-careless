// –§–∞–π–ª: PillNotificationScheduler.swift (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –° –ê–ù–ì–õ–ò–ô–°–ö–ò–ú –Ø–ó–´–ö–û–ú)
import Foundation
import UserNotifications

class PillNotificationScheduler {
    static let shared = PillNotificationScheduler()
    private init() {}

    func scheduleNotification(for reminder: PillReminder) {
        guard reminder.isEnabled else {
            cancelNotification(for: reminder)
            return
        }

        let center = UNUserNotificationCenter.current()
        
        let content = UNMutableNotificationContent()
        // --- –ò–ó–ú–ï–ù–ï–ù–ò–Ø –ó–î–ï–°–¨ ---
        content.title = "Pill Reminder"
        content.body = "It's time to take: \(reminder.name)"
        content.sound = .default

        // –ü–æ–ª—É—á–∞–µ–º —á–∞—Å—ã –∏ –º–∏–Ω—É—Ç—ã –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
        let components = Calendar.current.dateComponents([.hour, .minute], from: reminder.time)
        
        // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ —ç—Ç–æ –≤—Ä–µ–º—è
        let trigger = UNCalendarNotificationTrigger(dateMatching: components, repeats: true)
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∫–∞–∫ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        let request = UNNotificationRequest(identifier: reminder.id.uuidString, content: content, trigger: trigger)

        center.add(request) { error in
            if let error = error {
                print("‚ùå Error scheduling notification for '\(reminder.name)': \(error.localizedDescription)")
            } else {
                let hour = components.hour ?? 0
                let minute = components.minute ?? 0
                print("‚úÖ Notification for '\(reminder.name)' successfully scheduled for \(hour):\(String(format: "%02d", minute)).")
            }
        }
    }

    /// –û—Ç–º–µ–Ω—è–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞.
    func cancelNotification(for reminder: PillReminder) {
        let center = UNUserNotificationCenter.current()
        center.removePendingNotificationRequests(withIdentifiers: [reminder.id.uuidString])
        print("üóëÔ∏è Notification for '\(reminder.name)' was canceled.")
    }

    /// –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å —Ç–µ–∫—É—â–∏–º —Å–ø–∏—Å–∫–æ–º –ª–µ–∫–∞—Ä—Å—Ç–≤.
    func syncNotifications() {
        let reminders = PillReminderManager.shared.fetchReminders()
        
        // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
        UNUserNotificationCenter.current().removeAllPendingNotificationRequests()
        
        // –ó–∞—Ç–µ–º –∑–∞–Ω–æ–≤–æ –ø–ª–∞–Ω–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ –≤–∫–ª—é—á–µ–Ω—ã
        for reminder in reminders where reminder.isEnabled {
            scheduleNotification(for: reminder)
        }
        print("üîÑ All pill notifications have been synchronized.")
    }
}
